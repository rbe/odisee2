<?xml version="1.0" encoding="UTF-8"?>
<project name="Odisee" default="world">
    <property environment="env"/>
    <!-- Sources -->
    <property name="src.dir" value="${basedir}/src"/>
    <property name="src.ant.dir" value="${src.dir}/ant"/>
    <!--
        
        Build properties
        
    -->
    <property name="odisee-build.properties" value="${src.ant.dir}/odisee-build.properties"/>
    <loadproperties srcFile="${odisee-build.properties}" prefix="buildprop"/>
    <!--
    
        Import Ant build files.
    
    -->
    <import file="${src.ant.dir}/odisee-build-properties.xml"/>
    <import file="${src.ant.dir}/odisee-build-classpaths.xml"/>
    <import file="${src.ant.dir}/odisee-build-external-tasks.xml"/>
    <import file="${src.ant.dir}/odisee-build-library.xml"/>
    <import file="${src.ant.dir}/odisee-build-webservice.xml"/>
    <!--
    
        Cleanup.
    
    -->
    <target name="clean" depends="clean-webservice,clean-library">
        <!-- Clean distributions -->
        <delete verbose="${buildprop.odisee.build.verbose}" dir="${dist.dir}"/>
        <!-- Clean world distributions -->
        <delete verbose="${buildprop.odisee.build.verbose}" dir="${world.base.dir}"/>
    </target>
    <!--
        
        Download third party software.
        
    -->
    <target name="download-thirdparty">
        <mkdir dir="${thirdparty.dir}"/>
        <!-- Apache Ant -->
        <property name="ant_version" value="1.9.4"/>
        <property name="ant_url"
                  value="http://ftp.halifax.rwth-aachen.de/apache/ant/binaries/apache-ant-${ant_version}-bin.zip"/>
        <property name="ant_filename" value="apache-ant-${ant_version}.zip"/>
        <property name="ant_download" value="${thirdparty.dir}/${ant_filename}"/>
        <property name="ant_unzipped" value="apache-ant-${ant_version}"/>
        <property name="ant_world" value="${world.libexec.dir}/ant"/>
        <get src="${ant_url}" dest="${ant_download}" verbose="true" usetimestamp="true"/>
        <unzip src="${ant_download}" dest="${world.libexec.dir}"/>
        <move todir="${ant_world}">
            <fileset dir="${world.libexec.dir}/${ant_unzipped}"/>
        </move>
        <delete includeemptydirs="true">
            <fileset dir="${ant_world}/manual"/>
        </delete>
        <!-- Apache Tomcat 7 -->
        <property name="tomcat7_version" value="7.0.55"/>
        <property name="tomcat7_url"
                  value="http://ftp.halifax.rwth-aachen.de/apache/tomcat/tomcat-7/v${tomcat7_version}/bin/apache-tomcat-${tomcat7_version}.zip"/>
        <property name="tomcat7_filename" value="apache-tomcat-${tomcat7_version}.zip"/>
        <property name="tomcat7_download" value="${thirdparty.dir}/${tomcat7_filename}"/>
        <property name="tomcat7_unzipped" value="apache-tomcat-${tomcat7_version}"/>
        <property name="tomcat7_world" value="${world.libexec.dir}/tomcat"/>
        <get src="${tomcat7_url}" dest="${tomcat7_download}" verbose="true" usetimestamp="true"/>
        <unzip src="${tomcat7_download}" dest="${world.libexec.dir}"/>
        <move todir="${world.libexec.dir}/tomcat">
            <fileset dir="${world.libexec.dir}/${tomcat7_unzipped}"/>
        </move>
        <delete includeemptydirs="true">
            <fileset dir="${tomcat7_world}/webapps"/>
        </delete>
    </target>
    <!--
    
        Make distribution.
    
    -->
    <target name="distrib" depends="package-webservice,download-thirdparty">
        <!-- license -->
        <mkdir dir="${world.license.dir}"/>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.license.dir}">
            <fileset dir="${license.dir}">
                <include name="**"/>
            </fileset>
        </copy>
        <!-- odisee -->
        <mkdir dir="${world.base.dir}"/>
        <!-- Version -->
        <mkdir dir="${world.etc.dir}"/>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.etc.dir}">
            <fileset dir="${etc.dir}">
                <include name="**"/>
                <exclude name="odiinst"/>
            </fileset>
        </copy>
        <!-- bin/ -->
        <mkdir dir="${world.bin.dir}"/>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.bin.dir}">
            <fileset dir="${bin.dir}">
                <include name="**"/>
            </fileset>
        </copy>
        <!-- Libraries -->
        <mkdir dir="${world.lib.dir}"/>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.lib.dir}">
            <!-- -->
            <fileset dir="${lib.dir}">
                <include name="ant/**"/>
                <include name="apachepoi/**"/>
                <include name="pdfbox/**"/>
                <include name="libreoffice/3.5/**"/>
                <include name="odftoolkit/**"/>
                <include name="simpleodf/**"/>
            </fileset>
        </copy>
        <!-- libexec -->
        <mkdir dir="${world.libexec.dir}"/>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.libexec.dir}">
            <fileset dir="${libexec.dir}">
                <include name="**"/>
            </fileset>
        </copy>
        <!-- odisee.war -->
        <echo message="copy ${webservice.target.dir}/odisee.war -> ${world.tomcat.dir}/webapps"/>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.tomcat.dir}/webapps">
            <fileset dir="${webservice.target.dir}">
                <include name="odisee.war"/>
            </fileset>
        </copy>
        <!-- OOo extension
        <mkdir dir="${world.extension.dir}"/>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.extension.dir}">
            <fileset dir="${extension.dir}">
                <include name="Odisee/**"/>
            </fileset>
        </copy>
        -->
        <!-- Source -->
        <mkdir dir="${world.src.dir}"/>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.src.dir}">
            <fileset dir="${src.dir}">
                <!-- Source for Odisee OpenOffice extension and custom extensions -->
                <include name="extension/**"/>
                <!-- Source for Oracle PL/SQL -->
                <include name="oracle/**"/>
                <!-- Source for examples -->
                <include name="example/**"/>
                <!-- XML -->
                <include name="xml/**.xsd"/>
                <!-- Never include Groovy sources -->
                <exclude name="groovy/**"/>
            </fileset>
        </copy>
        <!-- Set permissions in bin directory -->
        <chmod perm="a+rx" file="${world.bin.dir}/**"/>
        <!-- var/ -->
        <mkdir dir="${world.var.dir}"/>
        <mkdir dir="${world.var.dir}/deploy"/>
        <mkdir dir="${world.var.dir}/log"/>
        <mkdir dir="${world.var.dir}/profile"/>
        <copy todir="${world.var.dir}/test">
            <fileset dir="${basedir}/var/test"/>
        </copy>
        <mkdir dir="${world.var.tmp.dir}/ramdisk"/>
        <mkdir dir="${world.var.dir}/backup/document"/>
        <mkdir dir="${world.var.dir}/backup/template"/>
        <mkdir dir="${world.var.dir}/backup/user"/>
        <mkdir dir="${world.var.dir}/user/odisee/document"/>
        <mkdir dir="${world.var.dir}/user/odisee/template"/>
        <mkdir dir="${world.var.dir}/user/odisee/pdf"/>
        <!--
        <mkdir dir="${world.var.dir}/user/odisee/deploy/fonts"/>
        <mkdir dir="${world.var.dir}/user/odisee/deploy/oxt"/>
        <mkdir dir="${world.var.dir}/user/odisee/deploy/pdf"/>
        <mkdir dir="${world.var.dir}/user/odisee/deploy/template"/>
        -->
        <copy todir="${world.var.dir}/user/odisee">
            <fileset dir="${basedir}/var/user/odisee"/>
        </copy>
    </target>
    <!--
    
        Compile everything, run tests and create 'world'.
        depends="run-lib-tests"
    -->
    <target name="world" depends="clean,distrib">
        <copy todir="${world.base.dir}/libexec">
            <fileset dir="${overlay.dir}/libexec"/>
        </copy>
        <echo file="${world.etc.dir}/version" message="${webservice.version.number}"/>
        <delete dir="${dist.dir}"/>
    </target>
    <!--
    
        Compile everything, run tests and create 'world'.
    
    -->
    <target name="world-linux-x86_64" depends="world">
        <copy todir="${world.linux_x86_64.base.dir}">
            <fileset dir="${world.base.dir}"/>
        </copy>
        <copy todir="${world.linux_x86_64.base.dir}">
            <fileset file="${overlay.dir}/Linux/.bash_profile"/>
        </copy>
        <copy todir="${world.linux_x86_64.base.dir}/bin">
            <fileset dir="${overlay.dir}/Linux/bin"/>
        </copy>
        <copy todir="${world.linux_x86_64.base.dir}/etc">
            <fileset dir="${overlay.dir}/Linux/etc"/>
        </copy>
        <copy todir="${world.linux_x86_64.base.dir}">
            <fileset dir="${overlay.dir}/Linux/x86_64"/>
        </copy>
    </target>
    <!--

        Make a distribution: compile everything and create one big ZIP archive.

    -->
    <target name="world-zip" depends="world">
        <zip destfile="${dist.dir}/odisee-${webservice.version.number}.zip" whenempty="fail">
            <zipfileset dir="${world.base.dir}" includes="**" excludes="bin/**" prefix="odisee"/>
            <zipfileset dir="${world.base.dir}" includes="bin/**" prefix="odisee" filemode="555"/>
        </zip>
    </target>
    <!--
    
       Run Odisee Server.
    
    -->
    <target name="run-webservice" depends="compile-webservice">
        <property environment="env"/>
        <exec dir="${src.webservice.dir}" executable="bash">
            <env key="GROOVY_HOME" value="${groovy.home}"/>
            <env key="GRAILS_HOME" value="${grails.home}"/>
            <env key="PATH" path="${env.GRAILS_HOME}/bin:${env.GROOVY_HOME}/bin:${env.PATH}"/>
            <arg value="${grails.home}/bin/grails"/>
            <arg value="run-app"/>
        </exec>
    </target>
    <!--
    
       Run Odisee Server in debug mode.
    
    -->
    <target name="debug-webservice" depends="compile-webservice">
        <property environment="env"/>
        <exec dir="webservice" executable="bash">
            <env key="GROOVY_HOME" value="${groovy.home}"/>
            <env key="GRAILS_HOME" value="${grails.home}"/>
            <env key="PATH" path="${env.GRAILS_HOME}/bin:${env.GROOVY_HOME}/bin:${env.PATH}"/>
            <arg value="${grails.home}/bin/grails"/>
            <arg value="run-app"/>
            <arg value="-debug"/>
        </exec>
    </target>
</project>
