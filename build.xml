<?xml version="1.0" encoding="UTF-8"?>
<project name="Odisee" default="world">
    <property environment="env"/>
    <!-- Sources -->
    <property name="src.dir" value="${basedir}/src"/>
    <!--
        
        Build properties
        
    -->
    <loadproperties srcFile="build.properties" prefix="buildprop"/>
    <!-- Sources -->
    <property name="java.src.dir"           value="${src.dir}/java"/>
    <property name="java.test.src.dir"      value="${basedir}/test/java"/>
    <property name="java.test.report.dir"   value="${basedir}/test/report/java"/>
    <property name="groovy.src.dir"         value="${src.dir}/groovy"/>
    <property name="groovy.test.src.dir"    value="${basedir}/test/groovy"/>
    <property name="groovy.test.report.dir" value="${basedir}/test/report/groovy"/>
    <property name="build.dir"              value="${basedir}/build"/>
    <property name="classes.dir"            value="${build.dir}/classes"/>
    <!--
        Odisee
    -->
    <property name="ODISEE_HOME"    value="${basedir}/ODISEE_HOME"/>
    <property name="etc.dir"        value="${ODISEE_HOME}/etc"/>
    <property name="bin.dir"        value="${ODISEE_HOME}/bin"/>
    <property name="lib.dir"        value="${ODISEE_HOME}/lib"/>
    <property name="libexec.dir"    value="${ODISEE_HOME}/libexec"/>
    <property name="antlib.dir"     value="${ODISEE_HOME}/lib/ant"/>
    <property name="license.dir"    value="${ODISEE_HOME}/LICENSE"/>
    <property name="extension.dir"  value="${src.dir}/extension"/>
    <property name="thirdparty.dir" value="${user.home}/project/odisee/thirdparty"/>
    <!--
        Distribution, world: distribution including platform-dependent things
    -->
    <property name="world.base.dir"       value="${build.dir}/world"/>
    <property name="world.etc.dir"        value="${world.base.dir}/etc"/>
    <property name="world.license.dir"    value="${world.base.dir}/LICENSE"/>
    <property name="world.bin.dir"        value="${world.base.dir}/bin"/>
    <property name="world.lib.dir"        value="${world.base.dir}/lib"/>
    <property name="world.libexec.dir"    value="${world.base.dir}/libexec"/>
    <property name="world.tomcat.dir"     value="${world.libexec.dir}/tomcat"/>
    <property name="world.src.dir"        value="${world.base.dir}/src"/>
    <property name="world.extension.dir"  value="${world.src.dir}/extension"/>
    <property name="world.var.dir"        value="${world.base.dir}/var"/>
    <property name="world.var.tmp.dir"    value="${world.var.dir}/tmp"/>
    <!-- Platform-dependent builds -->
    <property name="overlay.dir"                  value="${basedir}/overlay"/>
    <property name="world.linux_x86_64.base.dir"  value="${build.dir}/world-linux-x86_64"/>
    <property name="world.freebsd_amd64.base.dir" value="${build.dir}/world-freebsd-amd64"/>
    <!--
        Third party software
    -->
    <property name="local.libexec.dir"             value="${user.home}/app"/>
    <!-- OpenOffice/LibreOffice -->
    <property name="odisee.ooo.jar.dir"            value="${ODISEE_HOME}/lib/${buildprop.odisee.thirdparty.ooo.vendor}/${buildprop.odisee.thirdparty.ooo.version}"/>
    <!-- Apache PDFbox -->
    <property name="odisee.pdfbox-app.library.jar" value="${ODISEE_HOME}/lib/pdfbox/${buildprop.odisee.thirdparty.pdfbox.version}/pdfbox-app-${buildprop.odisee.thirdparty.pdfbox.version}.jar"/>
    <!-- Groovy, Grails -->
    <property name="groovy.version"                value="${buildprop.odisee.groovy.version}"/>
    <property name="grails.version"                value="${buildprop.odisee.grails.version}"/>
    <property name="groovy.home"                   value="${local.libexec.dir}/groovy/${groovy.version}"/>
    <property name="grails.home"                   value="${local.libexec.dir}/grails/${grails.version}"/>
    <!--
        Classpaths
    -->
    <!-- Groovy -->
    <path id="groovy.src.classpath">
        <fileset dir="${groovy.home}/embeddable"/>
        <fileset dir="${odisee.ooo.jar.dir}"/>
    </path>
    <path id="groovy.test.classpath">
        <fileset dir="${groovy.home}/embeddable"/>
        <fileset dir="${groovy.home}/lib">
            <include name="junit-**.jar"/>
        </fileset>
        <fileset dir="${odisee.ooo.jar.dir}"/>
    </path>
    <!--
        Ant libraries
    -->
    <!-- Ant contrib -->
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${antlib.dir}/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>
    <!-- XMLTask -->
    <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask">
        <classpath>
            <pathelement location="${antlib.dir}/xmltask-1.16.1.jar"/>
        </classpath>
    </taskdef>
    <!-- groovyc Task -->
    <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="groovy.src.classpath"/>
    <!--
    
        Odisee Web Service
    
    -->
    <!--
        Directories
    -->
    <property name="webservice.base.dir" value="${src.dir}/webservice"/>
    <property name="webservice.lib.dir" value="${webservice.base.dir}/lib"/>
    <property name="webservice.target.dir" value="${webservice.base.dir}/target"/>
    <!--
        Build
    -->
    <!-- Increase major version number, reset all other to zero -->
    <target name="webservice-inc-major-version">
        <propertyfile file="build.properties">
            <!-- Set status to 'alpha' -->
            <entry key="odisee.webservice.release.status" type="int" value="0"/>
            <!-- Set minor number to zero -->
            <entry key="odisee.webservice.release.minor" type="int" value="0"/>
            <!-- Increase major number -->
            <entry key="odisee.webservice.release.major" type="int" operation="+"/>
            <!-- Set build number to zero -->
            <entry key="odisee.webservice.release.build" type="int" value="0"/>
        </propertyfile>
    </target>
    <!-- Increase minor version number, reset status to zero -->
    <target name="webservice-inc-minor-version">
        <propertyfile file="build.properties">
            <!-- Set status to 'alpha' -->
            <entry key="odisee.webservice.release.status" type="int" value="0"/>
            <!-- Increase major number -->
            <entry key="odisee.webservice.release.minor" type="int" operation="+"/>
        </propertyfile>
    </target>
    <!-- Set release status to 'alpha' -->
    <target name="webservice-set-alpha-status">
        <propertyfile file="build.properties">
            <entry key="odisee.webservice.release.status" type="int" value="0"/>
        </propertyfile>
    </target>
    <!-- Set release status to 'beta' -->
    <target name="webservice-set-beta-status">
        <propertyfile file="build.properties">
            <entry key="odisee.webservice.release.status" type="int" value="1"/>
        </propertyfile>
    </target>
    <!-- Set release status to 'rc/release candidate' -->
    <target name="webservice-set-rc-status">
        <propertyfile file="build.properties">
            <entry key="odisee.webservice.release.status" type="int" value="2"/>
        </propertyfile>
    </target>
    <!-- Set release status to 'final' -->
    <target name="webservice-set-final-status">
        <propertyfile file="build.properties">
            <entry key="odisee.webservice.release.status" type="int" value="3"/>
        </propertyfile>
    </target>
    <!-- Set version properties -->
    <target name="webservice-set-version-props">
        <!-- Version number -->
        <property name="webservice.version.number" value="${buildprop.odisee.release.major}.${buildprop.odisee.release.minor}.${buildprop.odisee.release.status}"/>
    </target>
    <!--
        Copy thirdparty libraries to webservice/lib directory.
    -->
    <target name="copy-thirdparty-libraries">
        <!-- Clean lib directory -->
        <delete verbose="${buildprop.odisee.build.verbose}" dir="${webservice.lib.dir}"/>
        <mkdir dir="${webservice.lib.dir}"/>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${webservice.lib.dir}" overwrite="true">
            <!-- Copy PDFbox library -->
            <file name="${odisee.pdfbox-app.library.jar}"/>
            <!-- Copy OpenOffice/LibreOffice libraries -->
            <fileset dir="${odisee.ooo.jar.dir}"/>
        </copy>
    </target>
    <!--
        Compile web service
    -->
    <target name="compile-webservice" depends="clean-webservice,webservice-set-version-props,copy-thirdparty-libraries">
        <!-- Execute grails compile -->
        <property environment="env"/>
        <exec dir="${webservice.base.dir}" executable="bash" failonerror="true">
            <env key="ODISEE_HOME" value="${ODISEE_HOME}"/>
            <env key="GROOVY_HOME" value="${groovy.home}"/>
            <env key="GRAILS_HOME" value="${grails.home}"/>
            <env key="PATH" path="${env.GRAILS_HOME}/bin:${env.GROOVY_HOME}/bin:${env.JAVA_HOME}/bin:${env.PATH}"/>
            <arg value="${grails.home}/bin/grails"/>
            <arg value="compile"/>
        </exec>
    </target>
    <!--
        Package: create web service as war (Grails plugin)
    -->
    <target name="package-webservice" depends="compile-webservice">
        <property environment="env"/>
        <!-- Create web service as war (Grails plugin) -->
        <exec dir="${webservice.base.dir}" executable="bash" failonerror="true">
            <env key="ODISEE_HOME" value="${ODISEE_HOME}"/>
            <env key="GROOVY_HOME" value="${groovy.home}"/>
            <env key="GRAILS_HOME" value="${grails.home}"/>
            <env key="PATH" path="${env.GRAILS_HOME}/bin:${env.GROOVY_HOME}/bin:${env.JAVA_HOME}/bin:${env.PATH}"/>
            <arg value="${grails.home}/bin/grails"/>
            <arg value="prod"/>
            <arg value="war"/>
            <arg value="target/odisee.war"/>
        </exec>
    </target>
    <!--
        Package: create web service as war (Grails plugin)
    -->
    <target name="package-webservice-nojars" depends="compile-webservice">
        <property environment="env"/>
        <!-- Create web service as war (Grails plugin) -->
        <exec dir="${webservice.base.dir}" executable="bash">
            <env key="GROOVY_HOME" value="${groovy.home}"/>
            <env key="GRAILS_HOME" value="${grails.home}"/>
            <env key="PATH" path="${env.GRAILS_HOME}/bin:${env.GROOVY_HOME}/bin:${env.JAVA_HOME}/bin:${env.PATH}"/>
            <arg value="${grails.home}/bin/grails"/>
            <arg value="prod"/>
            <arg value="war"/>
            <arg value="target/odisee.war"/>
            <arg value="--nojars"/>
        </exec>
    </target>
    <!--
        Cleanup
    -->
    <target name="clean-world">
        <delete verbose="${buildprop.odisee.build.verbose}" dir="${world.base.dir}"/>
    </target>
    <target name="clean-webservice">
        <property environment="env"/>
        <!-- Clean web service -->
        <exec dir="${webservice.base.dir}" executable="bash" failonerror="true">
            <env key="GROOVY_HOME" value="${groovy.home}"/>
            <env key="GRAILS_HOME" value="${grails.home}"/>
            <env key="PATH" path="${env.GRAILS_HOME}/bin:${env.GROOVY_HOME}/bin:${env.JAVA_HOME}/bin:${env.PATH}"/>
            <arg value="${grails.home}/bin/grails"/>
            <arg value="clean"/>
        </exec>
        <!-- Clean target in webservice.base.dir -->
        <delete verbose="${buildprop.odisee.build.verbose}" dir="${webservice.base.dir}/target"/>
        <!-- Clean log files -->
        <delete verbose="${buildprop.odisee.build.verbose}">
            <fileset dir="${webservice.base.dir}">
                <include name="**.log"/>
            </fileset>
        </delete>
    </target>
    <target name="clean" depends="clean-webservice,clean-world">
    </target>
    <!--
    
        Make distribution
    
    -->
    <!--
        Download third party software
    -->
    <target name="download-thirdparty">
        <mkdir dir="${thirdparty.dir}"/>
        <!-- Apache Ant -->
        <property name="ant_version" value="1.9.4"/>
        <property name="ant_url"
                  value="http://ftp.halifax.rwth-aachen.de/apache/ant/binaries/apache-ant-${ant_version}-bin.zip"/>
        <property name="ant_filename" value="apache-ant-${ant_version}.zip"/>
        <property name="ant_download" value="${thirdparty.dir}/${ant_filename}"/>
        <property name="ant_unzipped" value="apache-ant-${ant_version}"/>
        <property name="ant_world" value="${world.libexec.dir}/ant"/>
        <get src="${ant_url}" dest="${ant_download}" verbose="true" usetimestamp="true"/>
        <unzip src="${ant_download}" dest="${world.libexec.dir}"/>
        <move verbose="${buildprop.odisee.build.verbose}" todir="${ant_world}">
            <fileset dir="${world.libexec.dir}/${ant_unzipped}"/>
        </move>
        <delete verbose="${buildprop.odisee.build.verbose}" includeemptydirs="true">
            <fileset dir="${ant_world}/manual"/>
        </delete>
        <!-- Apache Tomcat 7 -->
        <property name="tomcat7_version" value="7.0.55"/>
        <property name="tomcat7_url"
                  value="http://ftp.halifax.rwth-aachen.de/apache/tomcat/tomcat-7/v${tomcat7_version}/bin/apache-tomcat-${tomcat7_version}.zip"/>
        <property name="tomcat7_filename" value="apache-tomcat-${tomcat7_version}.zip"/>
        <property name="tomcat7_download" value="${thirdparty.dir}/${tomcat7_filename}"/>
        <property name="tomcat7_unzipped" value="apache-tomcat-${tomcat7_version}"/>
        <property name="tomcat7_world" value="${world.libexec.dir}/tomcat"/>
        <get src="${tomcat7_url}" dest="${tomcat7_download}" verbose="true" usetimestamp="true"/>
        <unzip src="${tomcat7_download}" dest="${world.libexec.dir}"/>
        <move verbose="${buildprop.odisee.build.verbose}" todir="${world.libexec.dir}/tomcat">
            <fileset dir="${world.libexec.dir}/${tomcat7_unzipped}"/>
        </move>
        <delete verbose="${buildprop.odisee.build.verbose}" includeemptydirs="true">
            <fileset dir="${tomcat7_world}/webapps"/>
        </delete>
    </target>
    <!--
        Compile everything, run tests and create 'world'
    -->
    <target name="world" depends="clean,package-webservice,download-thirdparty">
        <!-- ${ODISEE_HOME} -->
        <mkdir dir="${world.base.dir}"/>
        <!-- etc/version, build.number from TeamCity -->
        <echo file="${world.etc.dir}/version" message="${webservice.version.number}.${build.number}"/>
        <!-- Platform-independent ODISEE_HOME -->
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.base.dir}">
            <fileset dir="${ODISEE_HOME}">
                <include name="**"/>
                <exclude name="lib/OpenOffice/**"/>
                <exclude name="lib/LibreOffice/**"/>
                <exclude name="lib/pdfbox/**"/>
            </fileset>
        </copy>
        <!-- odisee.war -->
        <unzip src="${webservice.target.dir}/odisee.war" dest="${world.libexec.dir}/odisee/webapp"/>
        <!-- ${ODISEE_HOME}/var -->
        <mkdir dir="${world.var.dir}"/>
        <mkdir dir="${world.var.dir}/log"/>
        <mkdir dir="${world.var.dir}/profile"/>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.var.dir}/test">
            <fileset dir="${ODISEE_HOME}/var/test"/>
        </copy>
        <mkdir dir="${world.var.tmp.dir}/ramdisk"/>
        <mkdir dir="${world.var.dir}/backup/document"/>
        <mkdir dir="${world.var.dir}/backup/template"/>
        <mkdir dir="${world.var.dir}/backup/user"/>
        <mkdir dir="${world.var.dir}/user/odisee/.ssh"/>
        <mkdir dir="${world.var.dir}/user/odisee/document"/>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.var.dir}/user/odisee">
            <fileset dir="${ODISEE_HOME}/var/user/odisee">
                <include name="pdf/*"/>
                <include name="template/*"/>
            </fileset>
        </copy>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.base.dir}/libexec" overwrite="true">
            <fileset dir="${overlay.dir}/libexec"/>
        </copy>
        <!-- Permissions -->
        <chmod perm="a+rx" file="${world.bin.dir}/*"/>
        <chmod perm="a+rx" file="${world.libexec.dir}/ant/bin/*"/>
        <chmod perm="a+rx" file="${world.libexec.dir}/tomcat/bin/*"/>
    </target>
    <!--
    
        Distribution: Linux x86_64
        Make a distribution: compile everything and create one big ZIP archive.
    
    -->
    <!--
        Compile everything, run tests and create 'world' and copy overlays for Linux x86_64.
    -->
    <target name="world-linux-x86_64" depends="world">
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.linux_x86_64.base.dir}" overwrite="true">
            <fileset dir="${world.base.dir}"/>
            <fileset file="${overlay.dir}/Linux/.bash_profile"/>
            <fileset dir="${overlay.dir}/Linux/x86_64" erroronmissingdir="false"/>
        </copy>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.linux_x86_64.base.dir}/bin" overwrite="true">
            <fileset dir="${overlay.dir}/Linux/bin"/>
        </copy>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.linux_x86_64.base.dir}/etc" overwrite="true">
            <fileset dir="${overlay.dir}/Linux/etc"/>
        </copy>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.linux_x86_64.base.dir}/libexec" overwrite="true">
            <fileset dir="${overlay.dir}/Linux/libexec"/>
        </copy>
        <!-- Permissions -->
        <chmod perm="a+rx" file="${world.linux_x86_64.base.dir}/bin/*"/>
        <chmod perm="a+rx" file="${world.linux_x86_64.base.dir}/libexec/ant/bin/*"/>
        <chmod perm="a+rx" file="${world.linux_x86_64.base.dir}/libexec/tomcat/bin/*"/>
    </target>
    <target name="world-linux-x86_64-zip" depends="world-linux-x86_64">
        <!-- build.number from TeamCity -->
        <zip destfile="${build.dir}/odisee-linux-x86_64-${webservice.version.number}.${build.number}.zip"
             whenempty="fail">
            <zipfileset dir="${world.linux_x86_64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="*"
                        dirmode="750" filemode="550"/>
            <zipfileset dir="${world.linux_x86_64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="bin/*"
                        dirmode="550" filemode="550"/>
            <zipfileset dir="${world.linux_x86_64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="etc/**"
                        dirmode="750" filemode="640"/>
            <zipfileset dir="${world.linux_x86_64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="lib/**"
                        dirmode="550" filemode="640"/>
            <zipfileset dir="${world.linux_x86_64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="libexec/odisee/**"
                        dirmode="550" filemode="440"/>
            <zipfileset dir="${world.linux_x86_64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="libexec/ant/**" excludes="libexec/ant/bin/*"
                        dirmode="550" filemode="440"/>
            <zipfileset dir="${world.linux_x86_64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="libexec/ant/bin/*"
                        dirmode="550" filemode="550"/>
            <zipfileset dir="${world.linux_x86_64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="libexec/tomcat/**" excludes="libexec/tomcat/bin/*"
                        dirmode="750" filemode="640"/>
            <zipfileset dir="${world.linux_x86_64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="libexec/tomcat/bin/*"
                        dirmode="550" filemode="550"/>
            <zipfileset dir="${world.linux_x86_64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="LICENSE/*"
                        dirmode="550" filemode="440"/>
            <zipfileset dir="${world.linux_x86_64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="var/**"
                        dirmode="750" filemode="640"/>
        </zip>
    </target>
    <!--
    
        Distribution: FreeBSD x86_64
        Make a distribution: compile everything and create one big ZIP archive.
    
    -->
    <!--
        Compile everything, run tests and create 'world' and copy overlays for Linux x86_64.
    -->
    <target name="world-freebsd-amd64" depends="world">
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.freebsd_amd64.base.dir}" overwrite="true">
            <fileset dir="${world.base.dir}"/>
            <fileset file="${overlay.dir}/FreeBSD/.bash_profile"/>
            <fileset dir="${overlay.dir}/FreeBSD/amd64" erroronmissingdir="false"/>
        </copy>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.freebsd_amd64.base.dir}/bin" overwrite="true">
            <fileset dir="${overlay.dir}/FreeBSD/bin"/>
        </copy>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.freebsd_amd64.base.dir}/etc" overwrite="true">
            <fileset dir="${overlay.dir}/FreeBSD/etc"/>
        </copy>
        <copy verbose="${buildprop.odisee.build.verbose}" todir="${world.freebsd_amd64.base.dir}/libexec" overwrite="true">
            <fileset dir="${overlay.dir}/FreeBSD/libexec"/>
        </copy>
        <!-- Permissions -->
        <chmod perm="a+rx" file="${world.freebsd_amd64.base.dir}/bin/*"/>
        <chmod perm="a+rx" file="${world.freebsd_amd64.base.dir}/libexec/ant/bin/*"/>
        <chmod perm="a+rx" file="${world.freebsd_amd64.base.dir}/libexec/tomcat/bin/*"/>
    </target>
    <target name="world-freebsd-amd64-zip" depends="world-freebsd-amd64">
        <!-- build.number from TeamCity -->
        <zip destfile="${build.dir}/odisee-freebsd-amd64-${webservice.version.number}.${build.number}.zip"
             whenempty="fail">
            <zipfileset dir="${world.freebsd_amd64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="*"
                        dirmode="750" filemode="550"/>
            <zipfileset dir="${world.freebsd_amd64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="bin/*"
                        dirmode="550" filemode="550"/>
            <zipfileset dir="${world.freebsd_amd64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="etc/**"
                        dirmode="750" filemode="640"/>
            <zipfileset dir="${world.freebsd_amd64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="lib/**"
                        dirmode="550" filemode="640"/>
            <zipfileset dir="${world.freebsd_amd64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="libexec/odisee/**"
                        dirmode="550" filemode="440"/>
            <zipfileset dir="${world.freebsd_amd64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="libexec/ant/**" excludes="libexec/ant/bin/*"
                        dirmode="550" filemode="440"/>
            <zipfileset dir="${world.freebsd_amd64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="libexec/ant/bin/*"
                        dirmode="550" filemode="550"/>
            <zipfileset dir="${world.freebsd_amd64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="libexec/tomcat/**" excludes="libexec/tomcat/bin/*"
                        dirmode="750" filemode="640"/>
            <zipfileset dir="${world.freebsd_amd64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="libexec/tomcat/bin/*"
                        dirmode="550" filemode="550"/>
            <zipfileset dir="${world.freebsd_amd64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="LICENSE/*"
                        dirmode="550" filemode="440"/>
            <zipfileset dir="${world.freebsd_amd64.base.dir}"
                        prefix="odisee-${webservice.version.number}.${build.number}"
                        includes="var/**"
                        dirmode="750" filemode="640"/>
        </zip>
    </target>
    <!--
    
        Development
    
    -->
    <!--
       Run Odisee Server
    -->
    <target name="run-webservice" depends="compile-webservice">
        <property environment="env"/>
        <exec dir="${webservice.base.dir}" executable="bash">
            <env key="ODISEE_HOME" value="${ODISEE_HOME}"/>
            <env key="GROOVY_HOME" value="${groovy.home}"/>
            <env key="GRAILS_HOME" value="${grails.home}"/>
            <env key="PATH" path="${env.GRAILS_HOME}/bin:${env.GROOVY_HOME}/bin:${env.PATH}"/>
            <arg value="${grails.home}/bin/grails"/>
            <arg value="run-app"/>
        </exec>
    </target>
    <!--
       Run Odisee Server in debug mode
    -->
    <target name="debug-webservice" depends="compile-webservice">
        <property environment="env"/>
        <exec dir="${webservice.base.dir}" executable="bash">
            <env key="ODISEE_HOME" value="${ODISEE_HOME}"/>
            <env key="GROOVY_HOME" value="${groovy.home}"/>
            <env key="GRAILS_HOME" value="${grails.home}"/>
            <env key="PATH" path="${env.GRAILS_HOME}/bin:${env.GROOVY_HOME}/bin:${env.PATH}"/>
            <arg value="${grails.home}/bin/grails"/>
            <arg value="run-app"/>
            <arg value="-debug"/>
        </exec>
    </target>
</project>
