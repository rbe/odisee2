<?xml version="1.0" encoding="UTF-8"?>
<project name="Odisee-webservice">
    <!--
    
        Odisee Web Service.
    
    -->
    <!-- Build properties -->
    <property name="odisee-webservice-build.properties" value="${src.ant.dir}/odisee-webservice-build.properties"/>
    <loadproperties srcFile="${odisee-webservice-build.properties}" prefix="webservice-buildprop"/>
    <!--
        Directories.
    -->
    <property name="webservice.base.dir" value="${src.dir}/webservice"/>
    <property name="src.webservice.dir" value="${src.dir}/webservice"/>
    <!-- Libraries -->
    <property name="webservice.lib.dir" value="${webservice.base.dir}/lib"/>
    <!-- Target -->
    <property name="webservice.target.dir" value="${webservice.base.dir}/target"/>
    <!--
    
        Cleanup.
    
    -->
    <target name="clean-webservice">
        <property environment="env"/>
        <!-- Clean web service -->
        <exec dir="${webservice.base.dir}" executable="bash">
            <env key="GROOVY_HOME" value="${groovy.home}"/>
            <env key="GRAILS_HOME" value="${grails.home}"/>
            <env key="PATH" path="${GRAILS_HOME}/bin:${GROOVY_HOME}/bin:${env.PATH}"/>
            <arg value="${grails.home}/bin/grails"/>
            <arg value="clean"/>
        </exec>
        <!-- Clean target in webservice.base.dir -->
        <delete verbose="true" dir="${webservice.base.dir}/target"/>
        <!-- Clean log files -->
        <delete verbose="true">
            <fileset dir="${webservice.base.dir}">
                <include name="**.log"/>
            </fileset>
        </delete>
    </target>
    <!--
    
        Build.
    
    -->
    <!-- Increase major version number, reset all other to zero -->
    <target name="webservice-inc-major-version">
        <propertyfile file="${odisee-webservice-build.properties}">
            <!-- Set status to 'alpha' -->
            <entry key="odisee.webservice.release.status" type="int" value="0"/>
            <!-- Set minor number to zero -->
            <entry key="odisee.webservice.release.minor" type="int" value="0"/>
            <!-- Increase major number -->
            <entry key="odisee.webservice.release.major" type="int" operation="+"/>
            <!-- Set build number to zero -->
            <entry key="odisee.webservice.release.build" type="int" value="0"/>
        </propertyfile>
    </target>
    <!-- Increase minor version number, reset status to zero -->
    <target name="webservice-inc-minor-version">
        <propertyfile file="${odisee-webservice-build.properties}">
            <!-- Set status to 'alpha' -->
            <entry key="odisee.webservice.release.status" type="int" value="0"/>
            <!-- Increase major number -->
            <entry key="odisee.webservice.release.minor" type="int" operation="+"/>
        </propertyfile>
    </target>
    <!-- Set release status to 'alpha' -->
    <target name="webservice-set-alpha-status">
        <propertyfile file="${odisee-webservice-build.properties}">
            <!-- Set status to 'alpha' -->
            <entry key="odisee.webservice.release.status" type="int" value="0"/>
        </propertyfile>
    </target>
    <!-- Set release status to 'beta' -->
    <target name="webservice-set-beta-status">
        <propertyfile file="${odisee-webservice-build.properties}">
            <!-- Set status to 'alpha' -->
            <entry key="odisee.webservice.release.status" type="int" value="1"/>
        </propertyfile>
    </target>
    <!-- Set release status to 'rc/release candidate' -->
    <target name="webservice-set-rc-status">
        <propertyfile file="${odisee-webservice-build.properties}">
            <!-- Set status to 'alpha' -->
            <entry key="odisee.webservice.release.status" type="int" value="2"/>
        </propertyfile>
    </target>
    <!-- Set release status to 'final' -->
    <target name="webservice-set-final-status">
        <propertyfile file="${odisee-webservice-build.properties}">
            <!-- Set status to 'alpha' -->
            <entry key="odisee.webservice.release.status" type="int" value="3"/>
        </propertyfile>
    </target>
    <!-- Increase build number. -->
    <target name="webservice-inc-buildnumber">
        <propertyfile file="${odisee-webservice-build.properties}">
            <!-- Increase build number -->
            <entry key="odisee.webservice.release.build" type="int" default="0" operation="+"/>
            <!-- Set build date in build.properties -->
            <entry key="odisee.webservice.release.date" type="date" value="now" pattern="yyyyMMdd-HHmmss"/>
        </propertyfile>
    </target>
    <!-- Set version properties -->
    <target name="webservice-set-version-props">
        <!-- Version number -->
        <property name="webservice.version.number" value="${webservice-buildprop.odisee.webservice.release.major}.${webservice-buildprop.odisee.webservice.release.minor}.${webservice-buildprop.odisee.webservice.release.status}.${webservice-buildprop.odisee.webservice.release.build}"/>
        <!-- Name of jar -->
        <property name="odisee.webservice.jar" value="${dist.dir}/odisee-${webservice.version.number}.jar"/>
        <!-- Path to Odisee jar in web service -->
        <property name="odisee.webservice.odiseewebservice.jar" value="${webservice.lib.dir}/odisee-${webservice.version.number}.jar"/>
    </target>
    <!--
    
        Build libraries and copy them to webservice/lib directory.
        depends="build-lib"
    -->
    <target name="build-and-copy-libraries">
        <!-- Clean lib directory -->
        <delete dir="${webservice.lib.dir}"/>
        <mkdir dir="${webservice.lib.dir}"/>
        <!-- Copy Glue 1.3.1 library
        <copy verbose="${webservice-buildprop.odisee.library.build.verbose}" todir="${webservice.lib.dir}" file="${glue.zip}"/>
        -->
        <!-- Copy PDFbox library -->
        <copy verbose="${webservice-buildprop.odisee.library.build.verbose}" todir="${webservice.lib.dir}" file="${odisee.pdfbox-app.library.jar}"/>
        <!-- Copy Odisee library -->
        <!--
        <copy verbose="${webservice-buildprop.odisee.library.build.verbose}" todir="${webservice.lib.dir}" file="${odisee.library.jar}"/>
        -->
        <!-- TODO Copy OpenOffice libraries
        <copy verbose="${webservice-buildprop.odisee.library.build.verbose}" todir="${webservice.lib.dir}">
            <fileset dir="${odisee.libreoffice.jar.dir}"/>
        </copy>
        -->
        <antcall target="copy-libreoffice-libraries"/>
    </target>
    <target name="compile-webservice" depends="clean-webservice,webservice-set-version-props,build-and-copy-libraries">
        <!-- Execute grails compile -->
        <property environment="env"/>
        <exec dir="${webservice.base.dir}" executable="bash">
            <env key="GROOVY_HOME" value="${groovy.home}"/>
            <env key="GRAILS_HOME" value="${grails.home}"/>
            <env key="PATH" path="${GRAILS_HOME}/bin:${GROOVY_HOME}/bin:${env.PATH}"/>
            <arg value="${grails.home}/bin/grails"/>
            <arg value="compile"/>
        </exec>
    </target>
    <!--
    
        Package: create web service as war (Grails plugin) 
    
    -->
    <target name="package-webservice" depends="webservice-inc-buildnumber,compile-webservice">
        <property environment="env"/>
        <!-- Create web service as war (Grails plugin) -->
        <exec dir="${webservice.base.dir}" executable="bash">
            <env key="GROOVY_HOME" value="${groovy.home}"/>
            <env key="GRAILS_HOME" value="${grails.home}"/>
            <env key="PATH" path="${GRAILS_HOME}/bin:${GROOVY_HOME}/bin:${env.PATH}"/>
            <arg value="${grails.home}/bin/grails"/>
            <arg value="prod"/>
            <arg value="war"/>
            <arg value="target/odisee.war"/>
        </exec>
        <copy verbose="${webservice-buildprop.odisee.library.build.verbose}" todir="${dist.dir}" file="${odisee.pdfbox-app.library.jar}"/>
    </target>
    <!--
    
        Package: create web service as war (Grails plugin) 
    
    -->
    <target name="package-webservice-nojars" depends="webservice-inc-buildnumber,compile-webservice">
        <property environment="env"/>
        <!-- Create web service as war (Grails plugin) -->
        <exec dir="${webservice.base.dir}" executable="bash">
            <env key="GROOVY_HOME" value="${groovy.home}"/>
            <env key="GRAILS_HOME" value="${grails.home}"/>
            <env key="PATH" path="${GRAILS_HOME}/bin:${GROOVY_HOME}/bin:${env.PATH}"/>
            <arg value="${grails.home}/bin/grails"/>
            <!--arg value="-Dgrails.project.war.file=target/odisee.war"/-->
            <arg value="prod"/>
            <arg value="war"/>
            <arg value="target/odisee.war"/>
            <arg value="--nojars"/>
        </exec>
        <copy verbose="${webservice-buildprop.odisee.library.build.verbose}" todir="${dist.dir}" file="${odisee.pdfbox-app.library.jar}"/>
    </target>
</project>
